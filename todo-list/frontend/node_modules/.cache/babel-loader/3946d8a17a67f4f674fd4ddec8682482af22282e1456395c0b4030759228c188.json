{"ast":null,"code":"var _jsxFileName = \"/Users/leeseungjun/Desktop/Todo-List/todo-list/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Calendar from 'react-calendar';\nimport Modal from 'react-modal';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nimport './App.css';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nfunction TodoApp() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  useEffect(() => {\n    fetchTodosForDate(new Date());\n  }, []);\n  const fetchTodosForDate = date => {\n    const formattedDate = date.toISOString().split('T')[0];\n    axios.get(`http://localhost:3000/todos/${formattedDate}`).then(response => setTodos(response.data)).catch(error => console.error('Error fetching data:', error));\n  };\n  const addTodo = text => {\n    const formattedDate = selectedDate.toISOString().split('T')[0];\n    axios.post('http://localhost:3000/todos', {\n      text,\n      created_at: formattedDate\n    }).then(() => fetchTodosForDate(selectedDate)).catch(error => console.error('Error adding todo:', error));\n  };\n  const toggleTodo = id => {\n    const todo = todos.find(todo => todo.id === id);\n    axios.put(`http://localhost:3000/todos/${id}`, {\n      completed: !todo.completed\n    }).then(() => fetchTodosForDate(selectedDate)).catch(error => console.error('Error updating todo:', error));\n  };\n  const deleteTodo = id => {\n    axios.delete(`http://localhost:3000/todos/${id}`).then(() => fetchTodosForDate(selectedDate)).catch(error => console.error('Error deleting todo:', error));\n  };\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => setIsModalOpen(false);\n  const handleDateChange = date => {\n    setSelectedDate(date);\n    fetchTodosForDate(date);\n    closeModal();\n  };\n  const allTodosCompleted = todos.length > 0 && todos.every(todo => todo.completed);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    style: {\n      backgroundColor: allTodosCompleted ? '#d4edda' : 'white'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\uC624\\uB298 \\uD560 \\uC77C\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: openModal,\n        className: \"calendar-button\",\n        children: \"\\uD83D\\uDCC5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      toggleTodo: toggleTodo,\n      deleteTodo: deleteTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: todos.length === 0 ? \"아직 아무것도 안했어..\" : todos.filter(todo => !todo.completed).length === 0 ? \"다했다!!\" : `${todos.filter(todo => !todo.completed).length} 개나 남았어...`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: closeModal,\n      contentLabel: \"Calendar Modal\",\n      className: \"calendar-modal\",\n      overlayClassName: \"calendar-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: handleDateChange,\n        value: selectedDate,\n        locale: \"en-US\",\n        calendarType: \"US\",\n        formatShortWeekday: (locale, date) => {\n          const weekDay = date.toLocaleDateString(locale, {\n            weekday: 'short'\n          });\n          return weekDay[0]; // 요일의 첫 글자만 표시\n        },\n        tileContent: ({\n          date,\n          view\n        }) => view === 'month' && date.getDay() === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: date.getDate()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 86\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeModal,\n        children: \"\\uB2EB\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoApp, \"JkMUQT0JuHsHp73RsJKAHLGtMp8=\");\n_c = TodoApp;\nexport default TodoApp;\nvar _c;\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","Calendar","Modal","TodoForm","TodoList","jsxDEV","_jsxDEV","setAppElement","TodoApp","_s","todos","setTodos","isModalOpen","setIsModalOpen","selectedDate","setSelectedDate","Date","fetchTodosForDate","date","formattedDate","toISOString","split","get","then","response","data","catch","error","console","addTodo","text","post","created_at","toggleTodo","id","todo","find","put","completed","deleteTodo","delete","openModal","closeModal","handleDateChange","allTodosCompleted","length","every","className","style","backgroundColor","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","filter","isOpen","onRequestClose","contentLabel","overlayClassName","onChange","value","locale","calendarType","formatShortWeekday","weekDay","toLocaleDateString","weekday","tileContent","view","getDay","color","getDate","_c","$RefreshReg$"],"sources":["/Users/leeseungjun/Desktop/Todo-List/todo-list/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Calendar from 'react-calendar';\nimport Modal from 'react-modal';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nimport './App.css';\nimport 'react-calendar/dist/Calendar.css';\n\nModal.setAppElement('#root');\n\nfunction TodoApp() {\n  const [todos, setTodos] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  useEffect(() => {\n    fetchTodosForDate(new Date());\n  }, []);\n\n  const fetchTodosForDate = (date) => {\n    const formattedDate = date.toISOString().split('T')[0];\n    axios.get(`http://localhost:3000/todos/${formattedDate}`)\n      .then(response => setTodos(response.data))\n      .catch(error => console.error('Error fetching data:', error));\n  };\n\n  const addTodo = (text) => {\n    const formattedDate = selectedDate.toISOString().split('T')[0];\n    axios.post('http://localhost:3000/todos', { text, created_at: formattedDate })\n      .then(() => fetchTodosForDate(selectedDate))\n      .catch(error => console.error('Error adding todo:', error));\n  };\n\n  const toggleTodo = (id) => {\n    const todo = todos.find(todo => todo.id === id);\n    axios.put(`http://localhost:3000/todos/${id}`, { completed: !todo.completed })\n      .then(() => fetchTodosForDate(selectedDate))\n      .catch(error => console.error('Error updating todo:', error));\n  };\n\n  const deleteTodo = (id) => {\n    axios.delete(`http://localhost:3000/todos/${id}`)\n      .then(() => fetchTodosForDate(selectedDate))\n      .catch(error => console.error('Error deleting todo:', error));\n  };\n\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => setIsModalOpen(false);\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n    fetchTodosForDate(date);\n    closeModal();\n  };\n\n  const allTodosCompleted = todos.length > 0 && todos.every(todo => todo.completed);\n\n  return (\n    <div className=\"app\" style={{ backgroundColor: allTodosCompleted ? '#d4edda' : 'white' }}>\n      <h1>\n        오늘 할 일\n        <button onClick={openModal} className=\"calendar-button\">\n          📅\n        </button>\n      </h1>\n      <TodoForm addTodo={addTodo} />\n      <TodoList todos={todos} toggleTodo={toggleTodo} deleteTodo={deleteTodo} />\n      <p>\n        {todos.length === 0\n          ? \"아직 아무것도 안했어..\"\n          : todos.filter(todo => !todo.completed).length === 0\n          ? \"다했다!!\"\n          : `${todos.filter(todo => !todo.completed).length} 개나 남았어...`}\n      </p>\n      <Modal \n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        contentLabel=\"Calendar Modal\"\n        className=\"calendar-modal\"\n        overlayClassName=\"calendar-overlay\"\n      >\n        <Calendar \n          onChange={handleDateChange} \n          value={selectedDate}\n          locale=\"en-US\"\n          calendarType=\"US\"\n          formatShortWeekday={(locale, date) => {\n            const weekDay = date.toLocaleDateString(locale, { weekday: 'short' });\n            return weekDay[0]; // 요일의 첫 글자만 표시\n          }}\n          tileContent={({ date, view }) => view === 'month' && date.getDay() === 0 ? <p style={{color: 'red'}}>{date.getDate()}</p> : null}\n        />\n        <button onClick={closeModal}>닫기</button>\n      </Modal>\n    </div>\n  );\n}\n\nexport default TodoApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}