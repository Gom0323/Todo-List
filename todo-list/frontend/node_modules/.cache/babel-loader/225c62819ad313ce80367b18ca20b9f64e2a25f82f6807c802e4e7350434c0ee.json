{"ast":null,"code":"var _jsxFileName = \"/Users/leeseungjun/Desktop/Todo-List/todo-list/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport CustomCalendar from \"./components/CustomCalendar\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\nimport { format } from \"date-fns\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoApp() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  // 모든 할 일 데이터를 가져오기 위한 함수\n  const fetchTodos = useCallback(() => {\n    axios.get(`http://localhost:4000/todos`).then(response => {\n      setTodos(response.data); // 모든 할 일 데이터를 설정\n    }).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  useEffect(() => {\n    fetchTodos();\n  }, [fetchTodos]);\n  const addTodo = text => {\n    const formattedDate = format(selectedDate, \"yyyy-MM-dd\");\n    axios.post(\"http://localhost:4000/todos\", {\n      text,\n      created_at: formattedDate\n    }).then(() => fetchTodos()) // 새 할 일을 추가한 후 전체 할 일을 다시 가져옴\n    .catch(error => console.error(\"Error adding todo:\", error));\n  };\n  const toggleTodo = id => {\n    const updatedTodos = todos.map(todo => todo.id === id ? {\n      ...todo,\n      completed: !todo.completed\n    } : todo);\n    setTodos(updatedTodos); // 상태 업데이트\n\n    axios.put(`http://localhost:4000/todos/${id}`, {\n      completed: !todos.find(todo => todo.id === id).completed\n    }).catch(error => console.error(\"Error updating todo:\", error));\n  };\n  const deleteTodo = id => {\n    axios.delete(`http://localhost:4000/todos/${id}`).then(() => fetchTodos()) // 할 일을 삭제한 후 전체 할 일을 다시 가져옴\n    .catch(error => console.error(\"Error deleting todo:\", error));\n  };\n\n  // 선택된 날짜에 해당하는 할 일만 필터링\n  const filteredTodos = todos.filter(todo => {\n    const todoDate = format(new Date(todo.created_at), 'yyyy-MM-dd');\n    const selectedFormattedDate = format(selectedDate, 'yyyy-MM-dd');\n    return todoDate === selectedFormattedDate;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD560 \\uC77C \\uAD00\\uB9AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(CustomCalendar, {\n        todos: todos,\n        onDateSelect: date => setSelectedDate(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-section\",\n        children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n          addTodo: addTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n          todos: filteredTodos // 선택된 날짜의 할 일만 전달\n          ,\n          toggleTodo: toggleTodo,\n          deleteTodo: deleteTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", todos.length === 0 ? \"아직 아무것도 안했어..\" : todos.filter(todo => !todo.completed).length === 0 ? \"다했다!!\" : `${todos.filter(todo => !todo.completed).length} 개나 남았어...`, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoApp, \"xVt/Ui2o8rzfnwVgFAZ9JuieKDI=\");\n_c = TodoApp;\nexport default TodoApp;\nvar _c;\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","CustomCalendar","TodoForm","TodoList","format","jsxDEV","_jsxDEV","TodoApp","_s","todos","setTodos","selectedDate","setSelectedDate","Date","fetchTodos","get","then","response","data","catch","error","console","addTodo","text","formattedDate","post","created_at","toggleTodo","id","updatedTodos","map","todo","completed","put","find","deleteTodo","delete","filteredTodos","filter","todoDate","selectedFormattedDate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDateSelect","date","length","_c","$RefreshReg$"],"sources":["/Users/leeseungjun/Desktop/Todo-List/todo-list/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport CustomCalendar from \"./components/CustomCalendar\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\nimport { format } from \"date-fns\";\nimport \"./App.css\";\n\nfunction TodoApp() {\n  const [todos, setTodos] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  // 모든 할 일 데이터를 가져오기 위한 함수\n  const fetchTodos = useCallback(() => {\n    axios.get(`http://localhost:4000/todos`)\n      .then(response => {\n        setTodos(response.data); // 모든 할 일 데이터를 설정\n      })\n      .catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  useEffect(() => {\n    fetchTodos();\n  }, [fetchTodos]);\n\n  const addTodo = (text) => {\n    const formattedDate = format(selectedDate, \"yyyy-MM-dd\");\n    axios\n      .post(\"http://localhost:4000/todos\", { text, created_at: formattedDate })\n      .then(() => fetchTodos()) // 새 할 일을 추가한 후 전체 할 일을 다시 가져옴\n      .catch((error) => console.error(\"Error adding todo:\", error));\n  };\n\n  const toggleTodo = (id) => {\n    const updatedTodos = todos.map(todo => \n      todo.id === id ? { ...todo, completed: !todo.completed } : todo\n    );\n    \n    setTodos(updatedTodos); // 상태 업데이트\n  \n    axios\n      .put(`http://localhost:4000/todos/${id}`, {\n        completed: !todos.find((todo) => todo.id === id).completed,\n      })\n      .catch((error) => console.error(\"Error updating todo:\", error));\n  };\n\n  const deleteTodo = (id) => {\n    axios\n      .delete(`http://localhost:4000/todos/${id}`)\n      .then(() => fetchTodos()) // 할 일을 삭제한 후 전체 할 일을 다시 가져옴\n      .catch((error) => console.error(\"Error deleting todo:\", error));\n  };\n\n  // 선택된 날짜에 해당하는 할 일만 필터링\n  const filteredTodos = todos.filter(todo => {\n    const todoDate = format(new Date(todo.created_at), 'yyyy-MM-dd');\n    const selectedFormattedDate = format(selectedDate, 'yyyy-MM-dd');\n    return todoDate === selectedFormattedDate;\n  });\n\n  return (\n    <div className=\"app\">\n      <h1>할 일 관리</h1>\n      <div className=\"main-content\">\n        <CustomCalendar todos={todos} onDateSelect={(date) => setSelectedDate(date)} />\n        <div className=\"todo-section\">\n          <TodoForm addTodo={addTodo} />\n          <TodoList\n            todos={filteredTodos}  // 선택된 날짜의 할 일만 전달\n            toggleTodo={toggleTodo}\n            deleteTodo={deleteTodo}\n          />\n          <p> {todos.length === 0 ? \"아직 아무것도 안했어..\" : todos.filter((todo) => !todo.completed).length === 0 ? \"다했다!!\" : `${ todos.filter((todo) => !todo.completed).length } 개나 남았어...`} </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TodoApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}