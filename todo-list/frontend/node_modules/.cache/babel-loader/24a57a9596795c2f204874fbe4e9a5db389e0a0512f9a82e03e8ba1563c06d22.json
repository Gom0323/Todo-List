{"ast":null,"code":"var _jsxFileName = \"/Users/leeseungjun/Desktop/Todo-List/todo-list/frontend/src/components/CustomCalendar.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomCalendar({\n  todos = [],\n  onDateSelect\n}) {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const today = new Date();\n  const year = currentDate.getFullYear();\n  const month = currentDate.getMonth();\n  const daysInCalendar = generateCalendar(year, month);\n  const handlePrevMonth = () => {\n    setCurrentDate(new Date(year, month - 1, 1));\n  };\n  const handleNextMonth = () => {\n    setCurrentDate(new Date(year, month + 1, 1));\n  };\n  const handleDateClick = date => {\n    onDateSelect(date);\n  };\n  const isAllTodosCompleted = date => {\n    const formattedDate = format(date, 'yyyy-MM-dd');\n    const todosForDate = todos.filter(todo => {\n      const todoDate = format(new Date(todo.created_at), 'yyyy-MM-dd');\n      return todoDate === formattedDate;\n    });\n    return todosForDate.length > 0 && todosForDate.every(todo => todo.completed);\n  };\n  const hasTodos = date => {\n    const formattedDate = format(date, 'yyyy-MM-dd');\n    return todos.some(todo => {\n      const todoDate = format(new Date(todo.created_at), 'yyyy-MM-dd');\n      return todoDate === formattedDate;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"month\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevMonth,\n        children: \"\\uC774\\uC804\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: format(currentDate, \"yyyy년 M월\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextMonth,\n        children: \"\\uB2E4\\uC74C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"day\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          paddingTop: \"30px\"\n        },\n        children: [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"].map((dayName, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 0.1,\n            textAlign: \"center\",\n            padding: \"10px\",\n            color: dayName === \"일\" ? \"red\" : dayName === \"토\" ? \"blue\" : \"black\"\n          },\n          children: dayName\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), daysInCalendar.map((week, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        children: week.map((day, j) => {\n          const isCurrentMonth = format(day, \"M\") === format(currentDate, \"M\");\n          const isToday = isSameDay(day, today);\n          const allTodosCompleted = isAllTodosCompleted(day);\n          const todosExist = hasTodos(day);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 0.1,\n              textAlign: \"center\",\n              padding: \"10px\",\n              cursor: \"pointer\",\n              backgroundColor: allTodosCompleted ? 'rgba(0, 128, 0, 0.5)' : '',\n              // 할 일이 모두 완료된 날짜의 배경을 초록색으로\n              border: todosExist ? '2px solid rgba(0, 0, 0, 0.5)' : 'none',\n              // 할 일이 있는 날짜에만 테두리 추가\n              color: isCurrentMonth ? \"black\" : \"#ddd\"\n            },\n            onClick: () => handleDateClick(day),\n            children: [format(day, \"d\"), \"  \"]\n          }, j, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this);\n        })\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomCalendar, \"jlRD8Xn8VFdQnzpYmYXrLX8M9Sw=\");\n_c = CustomCalendar;\nexport default CustomCalendar;\nvar _c;\n$RefreshReg$(_c, \"CustomCalendar\");","map":{"version":3,"names":["CustomCalendar","todos","onDateSelect","_s","currentDate","setCurrentDate","useState","Date","today","year","getFullYear","month","getMonth","daysInCalendar","generateCalendar","handlePrevMonth","handleNextMonth","handleDateClick","date","isAllTodosCompleted","formattedDate","format","todosForDate","filter","todo","todoDate","created_at","length","every","completed","hasTodos","some","_jsxDEV","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","paddingTop","map","dayName","index","flex","textAlign","padding","color","week","i","day","j","isCurrentMonth","isToday","isSameDay","allTodosCompleted","todosExist","cursor","backgroundColor","border","_c","$RefreshReg$"],"sources":["/Users/leeseungjun/Desktop/Todo-List/todo-list/frontend/src/components/CustomCalendar.js"],"sourcesContent":["function CustomCalendar({ todos = [], onDateSelect }) {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const today = new Date();\n\n  const year = currentDate.getFullYear();\n  const month = currentDate.getMonth();\n\n  const daysInCalendar = generateCalendar(year, month);\n\n  const handlePrevMonth = () => {\n    setCurrentDate(new Date(year, month - 1, 1));\n  };\n\n  const handleNextMonth = () => {\n    setCurrentDate(new Date(year, month + 1, 1));\n  };\n\n  const handleDateClick = (date) => {\n    onDateSelect(date);\n  };\n\n  const isAllTodosCompleted = (date) => {\n    const formattedDate = format(date, 'yyyy-MM-dd');\n    const todosForDate = todos.filter(todo => {\n      const todoDate = format(new Date(todo.created_at), 'yyyy-MM-dd');\n      return todoDate === formattedDate;\n    });\n\n    return todosForDate.length > 0 && todosForDate.every(todo => todo.completed);\n  };\n\n  const hasTodos = (date) => {\n    const formattedDate = format(date, 'yyyy-MM-dd');\n    return todos.some(todo => {\n      const todoDate = format(new Date(todo.created_at), 'yyyy-MM-dd');\n      return todoDate === formattedDate;\n    });\n  };\n\n  return (\n    <div className=\"calendar\">\n      <div className=\"month\">\n        <button onClick={handlePrevMonth}>이전</button>\n        <span>{format(currentDate, \"yyyy년 M월\")}</span>\n        <button onClick={handleNextMonth}>다음</button>\n      </div>\n      <div className=\"day\">\n        <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: \"30px\" }}>\n          {[\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"].map((dayName, index) => (\n            <div\n              key={index}\n              style={{\n                flex: 0.1,\n                textAlign: \"center\",\n                padding: \"10px\",\n                color: dayName === \"일\" ? \"red\" : dayName === \"토\" ? \"blue\" : \"black\",\n              }}\n            >\n              {dayName}\n            </div>\n          ))}\n        </div>\n        {daysInCalendar.map((week, i) => (\n          <div key={i} style={{ display: \"flex\", justifyContent: \"center\" }}>\n            {week.map((day, j) => {\n              const isCurrentMonth = format(day, \"M\") === format(currentDate, \"M\");\n              const isToday = isSameDay(day, today);\n              const allTodosCompleted = isAllTodosCompleted(day);\n              const todosExist = hasTodos(day);\n\n              return (\n                <div\n                  key={j}\n                  style={{\n                    flex: 0.1,\n                    textAlign: \"center\",\n                    padding: \"10px\",\n                    cursor: \"pointer\",\n                    backgroundColor: allTodosCompleted ? 'rgba(0, 128, 0, 0.5)' : '', // 할 일이 모두 완료된 날짜의 배경을 초록색으로\n                    border: todosExist ? '2px solid rgba(0, 0, 0, 0.5)' : 'none', // 할 일이 있는 날짜에만 테두리 추가\n                    color: isCurrentMonth ? \"black\" : \"#ddd\",\n                  }}\n                  onClick={() => handleDateClick(day)}\n                >\n                  {format(day, \"d\")}  {/* 날짜 숫자 표시 */}\n                </div>\n              );\n            })}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default CustomCalendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}