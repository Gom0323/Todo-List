{"ast":null,"code":"var _jsxFileName = \"/Users/leeseungjun/Desktop/Todo-List/todo-list/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport CustomCalendar from \"./components/CustomCalendar\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\nimport { format } from \"date-fns\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoApp() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const fetchTodosForDate = useCallback(date => {\n    const formattedDate = format(date, \"yyyy-MM-dd\");\n    axios.get(`http://localhost:5000/todos/${formattedDate}`).then(response => {\n      console.log(\"API response data:\", response.data); // 응답 데이터 확인\n      setTodos(response.data);\n    }).catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n  useEffect(() => {\n    fetchTodosForDate(selectedDate);\n  }, [selectedDate, fetchTodosForDate]);\n  const addTodo = text => {\n    const formattedDate = format(selectedDate, \"yyyy-MM-dd\");\n    axios.post(\"http://localhost:4000/todos\", {\n      text,\n      created_at: formattedDate\n    }).then(() => fetchTodosForDate(selectedDate)).catch(error => console.error(\"Error adding todo:\", error));\n  };\n  const toggleTodo = id => {\n    axios.put(`http://localhost:4000/todos/${id}`, {\n      completed: !todos.find(todo => todo.id === id).completed\n    }).then(() => fetchTodosForDate(selectedDate)).catch(error => console.error(\"Error updating todo:\", error));\n  };\n  const deleteTodo = id => {\n    axios.delete(`http://localhost:4000/todos/${id}`).then(() => fetchTodosForDate(selectedDate)).catch(error => console.error(\"Error deleting todo:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD560 \\uC77C \\uAD00\\uB9AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(CustomCalendar, {\n        onDateSelect: date => setSelectedDate(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-section\",\n        children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n          addTodo: addTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n          todos: todos,\n          toggleTodo: toggleTodo,\n          deleteTodo: deleteTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: todos.length === 0 ? \"아직 아무것도 안했어..\" : todos.filter(todo => !todo.completed).length === 0 ? \"다했다!!\" : `${todos.filter(todo => !todo.completed).length} 개나 남았어...`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoApp, \"LMe3XIGsHk+kLwx6Te5RoFmgfFg=\");\n_c = TodoApp;\nexport default TodoApp;\nvar _c;\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","CustomCalendar","TodoForm","TodoList","format","jsxDEV","_jsxDEV","TodoApp","_s","todos","setTodos","selectedDate","setSelectedDate","Date","fetchTodosForDate","date","formattedDate","get","then","response","console","log","data","catch","error","addTodo","text","post","created_at","toggleTodo","id","put","completed","find","todo","deleteTodo","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDateSelect","length","filter","_c","$RefreshReg$"],"sources":["/Users/leeseungjun/Desktop/Todo-List/todo-list/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport CustomCalendar from \"./components/CustomCalendar\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\nimport { format } from \"date-fns\";\nimport \"./App.css\";\n\nfunction TodoApp() {\n  const [todos, setTodos] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  const fetchTodosForDate = useCallback((date) => {\n    const formattedDate = format(date, \"yyyy-MM-dd\");\n    axios\n      .get(`http://localhost:5000/todos/${formattedDate}`)\n      .then((response) => {\n        console.log(\"API response data:\", response.data); // 응답 데이터 확인\n        setTodos(response.data);\n      })\n      .catch((error) => console.error(\"Error fetching data:\", error));\n  }, []);\n\n  useEffect(() => {\n    fetchTodosForDate(selectedDate);\n  }, [selectedDate, fetchTodosForDate]);\n\n  const addTodo = (text) => {\n    const formattedDate = format(selectedDate, \"yyyy-MM-dd\");\n    axios\n      .post(\"http://localhost:4000/todos\", { text, created_at: formattedDate })\n      .then(() => fetchTodosForDate(selectedDate))\n      .catch((error) => console.error(\"Error adding todo:\", error));\n  };\n\n  const toggleTodo = (id) => {\n    axios\n      .put(`http://localhost:4000/todos/${id}`, {\n        completed: !todos.find((todo) => todo.id === id).completed,\n      })\n      .then(() => fetchTodosForDate(selectedDate))\n      .catch((error) => console.error(\"Error updating todo:\", error));\n  };\n\n  const deleteTodo = (id) => {\n    axios\n      .delete(`http://localhost:4000/todos/${id}`)\n      .then(() => fetchTodosForDate(selectedDate))\n      .catch((error) => console.error(\"Error deleting todo:\", error));\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>할 일 관리</h1>\n      <div className=\"main-content\">\n        <CustomCalendar onDateSelect={(date) => setSelectedDate(date)} />\n        <div className=\"todo-section\">\n          <TodoForm addTodo={addTodo} />\n          <TodoList\n            todos={todos}\n            toggleTodo={toggleTodo}\n            deleteTodo={deleteTodo}\n          />\n          <p>\n            {todos.length === 0\n              ? \"아직 아무것도 안했어..\"\n              : todos.filter((todo) => !todo.completed).length === 0\n              ? \"다했다!!\"\n              : `${\n                  todos.filter((todo) => !todo.completed).length\n                } 개나 남았어...`}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TodoApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}